
use fs

+ fn request(method: String, url: String, options: ?Options (null)) ClientResponse !invalid_url !ssl !connect !disconnect !invalid_response {

    let req = ClientRequest.create(method, url, options) ! {
        match E {
            E.invalid_url => throw invalid_url, EMSG
            E.ssl => throw ssl, EMSG
            default => throw connect, EMSG
        }
    }

    while (req.progress() ! {
        match E {
            E.disconnect => throw disconnect, EMSG
            default => throw invalid_response, EMSG
        }
    }) {}

    return req.response() ! throw invalid_response
}

+ fn download(url: String, to_path: String, method: String ("GET"), options: ?Options (null)) !invalid_file_path !invalid_url !ssl !connect !disconnect !invalid_response {

    let req = ClientRequest.create(method, url, options) ! {
        match E {
            E.invalid_url => throw invalid_url, EMSG
            E.ssl => throw ssl, EMSG
            default => throw connect, EMSG
        }
    }

    let file = fs:stream(to_path, true, true, false, true) ! {
        fs:remove(to_path) _
        throw invalid_file_path, "Failed to open file for download"
    }

    req.set_output_file(file)

    while (req.progress() ! {
        match E {
            E.disconnect => throw disconnect, EMSG
            default => throw invalid_response, EMSG
        }
    }) {}

    file.close()
}

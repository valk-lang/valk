
// class Thread {
//     handler: fnRef()()

//     static fn start(func: imut fnRef()()) SELF {
//         return SELF {
//             handler: func
//         }
//     }
//     static fn start_unsafe(func: fnRef()()) SELF $unsafe {
//         return SELF {
//             handler: func
//         }
//     }
// }

// // Example
// let x = 5
// Thread.start(fnRef() use (x) bool {
//     println("Hello from other thread: " + x)
//     return true
// })


use mem

value stack_size (100000)

struct Stack {
    base: ptr
    adr: ptr
    size: uint

    static fn new() Stack {
        let base = mem:alloc(stack_size)
        return Stack {
            base: base
            adr: base
            size: stack_size
        }
    }

    fn free() {
        mem:free(this.base)
        mem:free(this)
    }
}


fn backup_gc_stack() {
    let size : uint = stack_top - stack_root
    mem:copy(stack_root, stack_backup, size)
    stack_backup_size = size
    stack_top = stack_root
}

fn restore_gc_stack() {
    let size = stack_backup_size
    mem:copy(stack_backup, stack_root, stack_backup_size)
    stack_top = stack_root + stack_backup_size
}

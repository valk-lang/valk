
use mem

type color_type (u16)

value color_state_unused (0)
value color_state_used (1)

value color_blank (0)
value color_shared (1)
value color_custom (2)
value color_max (10000)

global color_next : color_type (@undefined)
global color_state : ptr (@undefined)
global color_disable_after : bool (false)

struct Color {
    static fn init() {
        color_next = color_custom
        color_state = mem:calloc(color_max)
    }
    static fn get() color_type {
        let c = color_next++
        if color_next == color_max : color_next = color_custom
        @ptrv(color_state, u8, c) = color_state_used
        return c
    }
}

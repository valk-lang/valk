
global mem_new : uint
global mem_trigger : uint
global mem_marked : uint

global stack_main : Stack
global stack_active : Stack

value mem_minimum_trigger (8192)

global remark_list: Bump (Bump.new())
global remark_list_switch: Bump (Bump.new())

fn update_usage() {
    // Calculate mem usage
    if mem_new > mem_trigger : gc()
}

fn gc() {
}

struct GcLocal {

    pub static fn init() GcLocal {
        print("Init local gc\n")

        stack_main = Stack.new()
        stack_active = stack_main

        ColorBook.init()

        mem_trigger = mem_minimum_trigger

        return GcLocal {
        }
    }

    static fn link(on: ptr, to: ptr) {
        let on_color = @ptrv(on, u16, byte_color_rel)
        let to_color = @ptrv(to, u16, byte_color_rel)

        if on_color != to_color {
            if on_color == color_shared {
                if to_color != color_shared {
                    // Mark shared
                    // TODO
                }
            } else {
                // Add on-item to remark list
                let adr = remark_list.get(sizeof(ptr))
                @ptrv(adr, ptr) = on
            }
        }
    }

    pub fn shutdown() {
    }
}

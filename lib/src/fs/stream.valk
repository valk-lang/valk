
use mem
use io

fn stream(path: String, read: bool, write: bool) FileStream !err_open {
    let fd = open(path, write, true) ! throw err_open
    return FileStream{ path: path, fd: fd, can_read: read, can_write: write }
}

struct FileStream {
    ~ path: String
    - fd: FD 
    - can_read: bool
    - can_write: bool
    ~ reading: bool (true)

    fn read(bytes: uint (10240)) String !read_err {
        if !this.can_read || !this.reading : return ""

        let str = String.make_empty(bytes)
        let rcount = io:read(this.fd, str.data_ptr(), bytes) ! throw read_err
        str.bytes = rcount
        @ptrv(str.data_ptr(), u8, rcount) = 0

        if rcount < bytes : this.close()

        return str
    }

    fn close() {
        if this.reading {
            this.reading = false
            let check = io:close(this.fd)
        }
    }

    fn _gc_free() {
        this.close()
    }
}

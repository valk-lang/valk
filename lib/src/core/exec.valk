
header "sys" as sys

use utils

// execute command and return exit-code
+ fn exec(cmd: String) (i32, String) !failed !pipe {
    cmd += " 2>&1"
    let buf = utils:ByteBuffer.new(1024)
    let cstr = @stack([1024 x u8]) @as cstring
    let pipe = sys:popen(cmd.data_cstring(), "r".data_cstring())
    if !isset(pipe) : throw pipe

    while sys:fgets(cstr, 1024, pipe) != null {
        let len = cstr.length()
        buf.append_from_ptr(cstr, len)
    }

    let exit_code : i32 = 0
    let status = sys:pclose(pipe)
    if status != -1 {
        exit_code = WEXITSTATUS(status)
    }
    return exit_code, buf.to_string()
}

fn WEXITSTATUS(status: i32) i32 {
    #if OS == win
    return status
    #else
    return (status & 0xff00) >> 8
    #end
}

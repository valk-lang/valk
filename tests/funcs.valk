
fn assert_in_func() {
    assert(true)
}

test "Assert in function" {
    assert_in_func()
}

fn func_default_arg_value_test(v1: String, v2: String ("x"), v3: String) String {
    return v1 + "." + v2 + "." + v3
}

class FuncArgTestClass {
    fn test(v1: String, v2: String ("x"), v3: String) String {
        return v1 + "." + v2 + "." + v3
    }
    static fn test2(v1: String, v2: String ("x"), v3: String) String {
        return v1 + "." + v2 + "." + v3
    }
}

test "Func arg default value _" {
    let str = func_default_arg_value_test("1", _, "3")
    assert(str == "1.x.3")
    str = func_default_arg_value_test("1", "2", "3")
    assert(str == "1.2.3")
    // Class func
    let ob = FuncArgTestClass{}
    str = ob.test("1", _, "3")
    assert(str == "1.x.3")
    str = ob.test("1", "2", "3")
    assert(str == "1.2.3")
    // Static func
    str = FuncArgTestClass.test2("1", _, "3")
    assert(str == "1.x.3")
    str = FuncArgTestClass.test2("1", "2", "3")
    assert(str == "1.2.3")
}


use valk:thread

shared thread_count : uint (0)

test "Threads" {
    let x : uint = 10
    let t = thread:Thread.start(fn() {
        thread_count++
        thread_count += x
        thread_count++
    })

    t.wait()

    assert(thread_count == 12)
}

class MTValue {
    value: int (0)
}

test "Threads: multi-threading" {

    let x = MTValue { value: 5 }
    let y = 4

    let threads = Array[thread:Thread].new()
    while y-- > 0 {
        let t = thread:Thread.start(fn() {
            let a = 100
            while a-- > 0 {
                atomic(x.value + 10)
            } 
        })
        threads.append(t)
    }

    each threads as t {
        t.wait()
    }

    assert(x.value == 4005)
}

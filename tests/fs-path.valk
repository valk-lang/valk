
use valk:fs

test "fs: Resolve" {
    let p1 = fs:path(".").resolve()
    #if OS == win
    assert(p1.substr(1, 1) == ":" || p1.starts_with("\\"))
    #else
    assert(!p1.contains(".") && p1.starts_with("/"))
    #end

    let p2 = fs:path("/etc///ssl\\").resolve()
    #if OS == win
    assert((p2.substr(1, 1) == ":" || p2.starts_with("\\")) && !p2.ends_with("\\") && !p2.ends_with("/"))
    #elif OS == macos
    // macOS symlinks /etc to /private/etc
    assert(p2 == "/etc/ssl" || p2 == "/private/etc/ssl")
    #else
    assert(p2 == "/etc/ssl")
    #end

    let p3 = fs:path("C:/etc///ssl\\//").resolve()
    #if OS == win
    assert(p3 == "C:\\etc\\ssl")
    #else
    assert(p3 == "C:/etc/ssl")
    #end

    let p4 = fs:path("C:/etc///ssl\\//").resolve().pop()
    assert(!p4.contains("ssl") && p4.contains("etc") && p4.starts_with("C:") && !p4.ends_with("/") && !p4.ends_with("\\"))
    p4 = p4.pop()
    assert(p4 == "C:")
    p4 = p4.pop()
    assert(p4 == "C:") // Result should stay the same

    let p5 = fs:path("/").resolve().pop()
    #if OS == win
    assert(p5.substr(1, 1) == ":" || p5.starts_with("\\"))
    #else
    assert(p5 == "/")
    #end
}

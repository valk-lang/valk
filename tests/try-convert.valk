
value tc_v1 (8)
value tc_v2 (2)

fn tc_fn1() uint !err {
    throw err
}

test "Try convert: Suggest number types" {
    // Asserts are not that important
    // We are just checking if it builds with type errors
    let x : u8 = 8 | 16;
    assert(x == 24)
    x = 8 | 16;
    assert(x == 24)
    x = tc_v1 | tc_v2;
    assert(x == 10)
    let u = tc_fn1() !? <{
        return 5
    }
    assert(u == 5)
}

test "Try convert: float <-> int" {
    let a : uint = 10
    let b : float = a
    assert(b == 10)
    let c : float = b + 10 / 3
    assert(c.to_str(2) == "13.33")
}

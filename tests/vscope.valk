
fn vscope_err() int !err {
    throw err
}
fn vscope_err2() (int, int) !err {
    throw err
}
fn vscope_err3() (String, String) !err {
    throw err
}
fn mvtest() (String, String) {
    return "1", "2"
}

test "Value scopes" {

    let a = <{
        return 1
    }
    let b = vscope_err() !? <{
        return 2
    }
    let c = vscope_err() !? <{
        if true {
            return 3
        }
        return 4
    }

    assert(a == 1)
    assert(b == 2)
    assert(c == 3)

    let d, e = <{
        if true {
            return 1,2
        }
        return 3,4
    }

    assert(d == 1)
    assert(e == 2)

    let f, g = vscope_err2() !? <{
        return 3, 4
    }

    assert(f == 3)
    assert(g == 4)

    // let x, y = true ? mvtest() : mvtest()

    let h, i = vscope_err3() !? <{
        return 3, 4
    }

    assert(h == "3")
    assert(i == "4")
}

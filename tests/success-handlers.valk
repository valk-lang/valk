
fn success1() (String, int) !err {
    return "test", 20
}
fn success2() String !err {
    throw err
}

class SH1 {
    sub: SH2 (SH2{})
}
class SH2 {
    value: uint (5)

    fn getv() uint !fail {
        if false : throw fail
        return this.value
    }
}

test "Success handlers" {
    let result = ""
    success1() -> (r1, r2) {
        result = r1 + r2
    }
    assert(result == "test20")
    result = "x"
    success2() -> r1 {
        result = r1
    }
    assert(result == "x")

    let ob = SH1{}
    let val : uint = 0
    ob.sub.getv() -> v : val = v
    assert(val == 5)
}

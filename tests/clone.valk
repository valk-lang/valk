
class CloneA {
    v1: CloneB
}
class CloneB {
    v1: ?CloneC (null)
    v2: CloneC
}
class CloneC {
    v1: int
}

test "Cloning" {
    let a = 1
    let b = "2"
    let c : ?CloneA = null 
    let d = CloneA {
        v1: CloneB { v1: CloneC { v1: 5 }, v2: CloneC { v1: 6 } }
    } 
    let e = CloneA {
        v1: CloneB { v2: CloneC { v1: 7 } }
    } 
    let f = Array[String].new()
    f.push("a")
    f.push("b")
    f.push("c")

    let ca = clone(a)
    let cb = clone(b)
    let cc = clone(c)
    let cd = clone(d)
    let ce = clone(e)
    let cf = clone(f)

    assert(ca == 1)
    assert(cb == "2" && cb.@cast(ptr) != c.@cast(ptr))
    assert(cc == null)
    assert(cd.v1 != d.v1)
    assert(cd.v1.v2 != d.v1.v2)
    assert(cd.v1.v2.v1 == d.v1.v2.v1)

    assert(ce.v1 != e.v1)
    assert(ce.v1.v1 == e.v1.v1)
    assert(ce.v1.v2 != e.v1.v2)
    assert(ce.v1.v2.v1 == e.v1.v2.v1)

    let f1 = f.get(0) !? "x"
    let f2 = f.get(1) !? "x"
    let f3 = f.get(2) !? "x"
    assert(cf.length == 3)
    assert(f1 == "a")
    assert(f2 == "b")
    assert(f3 == "c")
}

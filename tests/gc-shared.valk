
@ignore_access

use valk:gc

@shared shared_test_node : ?Node (null)

fn shared_1() {
    shared_test_node = Node.tree(12)
}
fn shared_2() {
    let i = 0
    while i++ < 10 {
        shared_test_node = Node.tree(12)
    }
}

test "GC: Shared Leaks" {
    // Record before memory usage
    let before = gc:mem_shared
    // Create some shared memory
    shared_1()
    // Record new memory usage
    let before2 = gc:mem_shared
    assert(before2 > before)
    // Create much more shared memory
    shared_2()
    // Test shared memory amount
    gc:run_shared_gc()
    assert(gc:mem_shared == before2)
    // Remove shared memory test
    shared_test_node = null
    gc:run_shared_gc()
    assert(gc:mem_shared <= before + 100)
}
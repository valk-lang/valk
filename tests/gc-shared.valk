
use valk:gc

@shared shared_ob1 : ?SharedTest (null)
@shared shared_ob2 : ?SharedTest (null)
@shared shared_ob3 : ?SharedTest (null)
@shared shared_result : String ("")

class SharedTest {
    value: String

    static fn new(value: String) SELF {
        return SELF {
            value: value
        }
    }

    fn _gc_free() {
        shared_result += this.value + "."
    }
}

test "GC Shared" {
    gc:shared_gc.disable = true

    gc:shared_gc.update_age()
    shared_ob1 = SharedTest.new("ob1")
    shared_ob2 = SharedTest.new("ob2")
    shared_ob3 = SharedTest.new("ob3")

    gc:local_gc.shared_state = gc:shared_state_mark
    gc:local_gc.shared_update = true
    gc:run_now()

    shared_ob1 = null
    shared_ob3 = null
    gc:run_now()

    assert(shared_result == "")

    gc:shared_gc.update_age()
    gc:local_gc.shared_state = gc:shared_state_mark
    gc:local_gc.shared_update = true
    gc:run_now()
    gc:shared_gc.mark_shared_globals()


    gc:local_gc.shared_state = gc:shared_state_clear
    gc:local_gc.shared_update = true
    gc:run_now()

    assert(shared_result == "ob1.ob3.")

    gc:shared_gc.disable = false
}

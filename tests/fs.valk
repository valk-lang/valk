
use valk:fs
use valk:io

test "fs: dir_of" {
    assert(fs:dir_of("/etc/nginx/nginx.conf") == "/etc/nginx")
    assert(fs:dir_of("/etc/nginx/") == "/etc")
    assert(fs:dir_of("/etc/nginx") == "/etc")
    assert(fs:dir_of("/etc") == "/")
    assert(fs:dir_of("/") == "/")
    assert(fs:dir_of("etc") == "etc")
    assert(fs:dir_of("") == "")
    // TODO: windows paths
}

test "fs: basename" {
    assert(fs:basename("/etc/nginx/nginx.conf") == "nginx.conf")
    assert(fs:basename("/etc/nginx/") == "nginx")
    assert(fs:basename("/") == "")
    assert(fs:basename("") == "")
    // TODO: windows paths
}

test "fs: create / delete directories & files" {
    // Create dir
    let dir = fs:exe_dir() + "/valk-mkdir-test/"
    fs:mkdir(dir, 509) _
    assert(fs:exists(dir))

    // Cwd / Chdir
    let cwd = fs:cwd()
    fs:chdir(dir)
    #if OS == win
    assert(fs:cwd() == dir.rtrim("/").replace("/", "\\"))
    #else
    println(fs:cwd())
    println(dir)
    assert(fs:cwd() == dir.rtrim("/"))
    #end
    assert(cwd != dir)
    fs:chdir(cwd)

    // Open & create file
    let file = dir + "test.txt"
    let fd = fs:open_extend(file, true, true, true) !? 10000
    assert(fd != 10000)
    assert(fs:exists(file))

    // Files in dir
    let files = fs:files_in(dir)
    assert(files.length == 1)
    let fn = files.get(0) !? ""
    let base = fs:basename(fn)
    assert(base == "test.txt")

    // Write to FD
    if fd != 10000 {
        io:write(fd, "hello") ! {
            assert(false)
            return
        }
        io:write(fd, "-world") ! {
            assert(false)
            return
        }
        io:close(fd)

        let content = fs:read(file) !? "-failed to read file-"
        assert(content == "hello-world")
    }

    // Delete file
    if fs:exists(file) {
        fs:remove(file) _
    }
    assert(fs:exists(file) == false)

    // Delete dir
    fs:rmdir(dir) _
    assert(fs:exists(dir) == false)
}

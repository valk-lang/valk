
use valk:fs
use valk:core
use helper

fn link_create_lld_symlinks(host_os: String) {
    let linker_dir = fs:exe_dir()
    if host_os != "win" {
        let code, out = core:exec("which lld") ! { basic_error("Please install the 'lld' linker"); return }
        if code == 1 : basic_error("Please install the 'lld' linker")
        linker_dir = out.trim("\n").rtrim("/lld")
    }

    if !fs:is_dir(linker_dir) : basic_error("Linker directory not found: " + linker_dir)
    let ext = host_os == "win" ? ".exe" : ""
    let main_linker = helper:add(linker_dir, (host_os == "win" ? "lld-link" : "lld") + ext)
    if !fs:exists(main_linker) : basic_error("Cannot find linker: " + main_linker)

    create_linker_symlink(host_os, main_linker, helper:add(linker_dir, "ld.lld" + ext))
    create_linker_symlink(host_os, main_linker, helper:add(linker_dir, "ld64.lld" + ext))
    create_linker_symlink(host_os, main_linker, helper:add(linker_dir, "lld-link" + ext))

    helper:msg("âœ…", "Done")
}

fn create_linker_symlink(host_os: String, target: String, link: String) {
    if !fs:exists(link) {
        let cmd = ""
        if host_os == "win" {
            cmd = "mklink \"" + link + "\" \"" + target + "\""
        } else {
            cmd = "ln -s \"" + target + "\" \"" + link + "\""
        }

        println("> Create linker symlink: " + cmd)
        let code, out = core:exec(cmd) ! {
            basic_error("> Failed to create symlink: " + cmd)
            return
        }
        if !fs:exists(link) {
            basic_error("> Failed to create linker symlink: " + link)
        }
    } else {
        println("> Skip - Symlink already exists: " + link)
    }
}

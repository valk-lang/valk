
struct CLIArgs {
    inputs: Array[String]
    flags: Array[String]
    values: Map[String]
    invalid: Array[String]
}

fn parse_cli_args(args: Array[String], valid_flags: Array[String], flags_with_value: Array[String]) CLIArgs {
    let inputs = Array[String].new()
    let flags = Array[String].new()
    let values = Map[String].new()
    let invalid = Array[String].new()

    let key: ?String = null
    each args as arg {
        if isset(key) {
            values.set(key, arg)
            key = null
            continue
        }
        if arg.starts_with("-") {
            if !valid_flags.contains(arg) {
                invalid.push(arg)
                continue
            }

            if flags_with_value.contains(arg) {
                key = arg
            } else {
                flags.push(arg)
            }
            continue
        }
        inputs.push(arg)
    }

    return CLIArgs {
        inputs: inputs
        flags: flags
        values: values
        invalid: invalid
    }
}

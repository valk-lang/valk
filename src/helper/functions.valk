
use valk:ansi

fn max_uint(v1: uint, v2: uint) uint {
    return v2 > v1 ? v2 : v1
}

fn msg(emoji: String, msg: String) {
    if ansi:supported() {
        println(emoji + " " + msg)
    } else {
        println("> " + msg)
    }
}


fn str_to_float(str: String) f64 !invalid {

    let len = str.bytes
    if len == 0 : throw invalid

    let result : f64 = 0
    let sign : f64 = 1
    let pos : uint = 0
    let has_dot = false
    let decimals = 0

    if str.get(0) == '-' {
        sign = -1
        pos++
        if pos == len : throw invalid
    }

    while pos < len {
        let ch = str.get(pos++)
        if ch.is_number() {
            result = result * 10 + (ch - '0');
            continue
        } else if ch == '.' {
            has_dot = true
            break
        }
        throw invalid
    }

    if has_dot {
        let value : f64 = 0
        let div : f64 = 1
        while pos < len {
            let ch = str.get(pos++)
            if ch.is_number() {
                value = value * 10 + (ch - '0');
                div *= 10
                continue
            }
            throw invalid
        }
        result += value / div
    }

    return result * sign
}
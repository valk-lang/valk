

fn stage_fc_pipeline(b: Build) {
    let i : uint = 0
    let list = b.fc_pipeline
    while i < list.length {
        let fc = list.get(i++) ! break
        stage_fc(fc)
    }
}

fn stage_fc(fc: Fc) {
    let b = fc.build
    if b.verbose > 2 : b.log("> Stage 1: " + fc.path)

    let p = Parser.create(fc.start, null)

    while true {
        let t = p.tok(true, true)

        if t == tok_end {
            println("end")
            break
        }

        let act = act_public_nsc

        if t == tok_word {
            let word = p.word()

            if word == "fn" {
                continue
            }
        }

        if Parser.tok_has_word(t) {
            p.error("Unexpected token: " + p.word())
        } else {
            p.error("Unexpected token")
        }
    }

    p.check_scope_end()
}

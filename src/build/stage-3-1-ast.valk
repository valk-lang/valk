
fn stage_ast(b: Build) {

    if b.verbose > 2 : b.log("> Stage 3: Parse function ASTs")

    each b.units as unit {
        if unit.parse_last : continue
        parse_ast_unit(unit)
    }
    each b.units as unit {
        if !unit.parse_last : continue
        parse_ast_unit(unit)
    }

    stage_link(b)
}

fn parse_ast_unit(unit: Unit) {
    each unit.functions as func {
        parse_func_ast(func)
    }

    stage_unroll(unit)
    stage_ir(unit)
    stage_object(unit)

    each unit.functions as func {
        func.scope.ast.clear()
    }
    unit.functions.clear()
    unit.classes.clear()
    unit.globals.clear()
    unit.consts.clear()
}

fn parse_func_ast(func: Func) {

    let body = func.chunk_body
    if !isset(body) : return

    let b = func.build
    if b.verbose > 2 : b.log("> Stage 3.1: Parse function AST: " + func.display_name)

    let p = Parser.new(body, null)
    p.func = func

    read_ast(p, func.scope, false)
}

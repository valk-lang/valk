
fn stage_ast(b: Build) {

    if b.verbose > 2 : b.log("> Stage 3: Parse function ASTs")

    // Parse
    each b.units as unit {
        parse_ast_unit(unit, false)
    }
    // Parse last
    each b.units as unit {
        parse_ast_unit(unit, true)
    }

    stage_link(b)
}

fn parse_ast_unit(unit: Unit, parse_last: bool) {
    let has_parse_last = false
    each unit.functions as func {
        if func.parse_last : has_parse_last = true
        if func.parse_last != parse_last : continue
        parse_func_ast(func)
    }

    if has_parse_last == parse_last {
        stage_unroll(unit)
        stage_ir(unit)
        stage_object(unit)

        unit.wipe()
    }
}

fn parse_func_ast(func: Func) {

    let body = func.chunk_body
    if !isset(body) : return

    let b = func.build
    if b.verbose > 2 : b.log("> Stage 3.1: Parse function AST: " + func.display_name)

    let p = Parser.new(body, null)
    p.func = func

    read_ast(p, func.scope, false)
}

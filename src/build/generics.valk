

fn read_generic_names(p: Parser) Array[String] {
    let names = array[String]{}
    while true {
        let name = p.read_word(true, false)
        if names.contains(name) : p.error("Duplicate name for generic type")
        names.push(name)
        p.expect2(",", "]", true, false)
    }
    return names
}

fn read_func_generic(p: Parser, scope: Scope, func: Func) Func {
    let names = func.generic_names
    if !isset(names) : p.error("Missing generic names (bug)")
    p.expect("[", false, false)
    let types = array[Type]{}
    let last_i = names.length - 1
    each names as k, v {
        let type = read_type(p, scope, false)
        p.expect(k == last_i ? "]" : ",", true, true)
        types.push(type)
    }

    return func
}

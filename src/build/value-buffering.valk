
fn multi_this_that_buffers(b: Build, scope: Scope, lefts: Array[Value], rights: Array[Value]) Array[Decl] {
    let decls = Array[Decl].new()
    each lefts as left, i {
        let right = rights.get(i) ! b.error("Missing right side value for multi ?: value (bug)")

        // let func = scope.get_func() ! b.error("Missing scope function (bug)")
        // let decl = func.get_buffer(right.rett, scope)

        let decl = Decl.new(right.rett, false)
        decl.is_used = true
        decl.is_mut = true

        scope.add_decl(decl)
        decls.push(decl)

        lefts.set(i, vgen_declare(decl, left)) _
        rights.set(i, vgen_declare(decl, right)) _
    }
    return decls
}
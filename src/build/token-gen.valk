
fn tgen_statement(v: Value) Token {
    return Token {
        type: tk_statement
        value1: v
    }
}

fn tgen_declare(decl: Decl, value: Value) Token {
    // if decl.type.is_inline_type() {
    //     decl.is_mut = true
    //     if value.replace_base(vgen_decl(decl)) {
    //         return Token {
    //             type: tk_statement
    //             value1: value
    //         }
    //     }
    // }
    return Token {
        type: tk_declare
        decl: decl
        value1: value
    }
}

fn tgen_assign(v1: Value, v2: Value) Token {
    // if v1.rett.is_inline_type() {
    //     if v2.replace_base(v1) {
    //         return Token {
    //             type: tk_statement
    //             value1: v2
    //         }
    //     }
    // }
    return Token {
        type: tk_assign
        value1: v1
        value2: v2
    }
}
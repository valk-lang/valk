
value default_act (act_private | (act_public << 3)  | (act_public << 6))

fn read_full_act(p: Parser) int {

    let act_all = convert_parser_act_sign(p)
    let act_pkg = act_public
    let act_ns = act_public

    p.tok(false, false, false)
    if p.word_is("[") {
        p.tok(false, false)
        p.tok(false, false)
        while !p.word_is("]") {
            if p.word_is("ns") {
                p.tok(false, false)
                act_ns = convert_parser_act_sign(p)
            } else if p.word_is("pkg") {
                p.tok(false, false)
                act_pkg = convert_parser_act_sign(p)
            } else {
                p.error("Expected 'ns', 'pkg' or ']'. Found: '" + p.word() + "'")
            }

            p.tok(false, false)
        }
        if act_ns < act_all : p.error("Namespace access level cannot be less strict than the default access level")
        if act_pkg < act_all : p.error("Package access level cannot be less strict than the default access level")
        if act_pkg > act_ns : p.error("Package access level cannot be less strict than the namespace access level")
    }

    return act_all | (act_ns << 3)  | (act_pkg << 6)
}

fn convert_parser_act_sign(p: Parser) int {
    if p.word_is("+") {
        return act_public
    } else if p.word_is("~") {
        return act_readonly
    } else if p.word_is("-") {
        return act_private
    }
    p.error("Expected '+' (public), '~' (read-only) or '-' (private). Found: '" + p.word() + "'")
}
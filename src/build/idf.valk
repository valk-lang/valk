
struct Idf {
    for: int
    type: ?Type (null)
    value: ?Value (null)
    decl: ?Decl (null)
    func: ?Func (null)
    class: ?Class (null)
    nsc: ?Nsc (null)

    static fn for_type(type: Type) Idf {
        return Idf {
            for: idf_type
            type: type
        }
    }

    static fn for_func(func: Func) Idf {
        return Idf {
            for: idf_func
            func: func
        }
    }

    static fn for_nsc(nsc: Nsc) Idf {
        return Idf {
            for: idf_nsc
            nsc: nsc
        }
    }
}

struct Id {
    ns: String
    pkg: ?String (null)

    static fn read(p: Parser, allow_space: bool, allow_newline: bool) Id {
        let pkg: ?String = null
        let ns = p.read_word(allow_space, allow_newline)
        let t = p.tok(false, false, false)
        if p.sign_is(":") {
            t = p.tok(false, false, true)
            pkg = ns
            ns = p.read_word(false, false)
        }
        return Id {
            ns: ns
            pkg: pkg
        }
    }
}


struct Decl {
    type: Type
    ir_name: String ("-nameless-")
    ir_imut_value: String ("")
    offset: uint (0)
    is_arg: bool
    is_gc: bool
    is_mut: bool (false)

    static fn new(type: Type, is_arg: bool) Decl {
        return Decl {
            type: type
            is_arg: is_arg
            is_gc: type.is_gc()
        }
    }
}

fn func_scope_finalize(func: Func) {
    let b = func.build
    let scope = func.scope

    let gc_count: uint = 0
    let alloca_size: uint = 0
    let decls = scope.decls
    each decls as decl {
        if !decl.is_gc {
            if decl.is_mut {
                decl.offset = alloca_size
                alloca_size += decl.type.size()
                alloca_size = alloca_size.round_up(b.ptr_size)
            }
            continue
        }
        if decl.is_mut || !decl.is_arg {
            decl.offset = gc_count++
        }
    }

    func.gc_decl_count = gc_count
    func.alloca_size = alloca_size
}

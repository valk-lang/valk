
class Global {
    unit: Unit
    build: Build
    fc: Fc
    act: int
    name: String
    export_name: String
    display_name: String
    ir_name: String
    type: ?Type (null)
    chunk_type: ?Chunk (null)
    chunk_value: ?Chunk (null)
    default_value: ?Value (null)
    shared: bool (false)
    from_header: bool (false)
    allow_unsafe: bool (false)

    fn get_type() Type {
        let type = this.type
        if !isset(type) : this.build.error("Missing global type (bug). Name: " + this.export_name)
        return type
    }

    // fn generate(u: Unit, name_prefix: String, type: Type) Global {
    //     let b = u.build
    //     let fc = b.generated_fc()
    //     let name = "generated_global_" + name_prefix + "_" + u.globals.length
    //     let g = Global {
    //         unit: u
    //         build: b
    //         fc: fc
    //         act: act_public
    //         name: name
    //         export_name: name
    //         display_name: name
    //         ir_name: name
    //         type: type
    //     }
    // }
}


fn stage_class_sizes(b: Build) {

    if b.verbose > 2 : b.log("> Stage 2.3: Determine class sizes")

    let class_count : uint = 0
    each b.units as unit {
        class_count += unit.classes.length
    }

    let total : uint = 0
    while total < class_count {
        let found : uint = 0
        each b.units as unit {
            each unit.classes as class {
                if class.size_known : continue
                class_determine_size(class) ! continue
                found++
            }
        }
        if found == 0 {
            print("Classes: ")
            each b.units as unit {
                each unit.classes as class {
                    if class.size_known : continue
                    print(class.display_name)
                    print(" ")
                }
            }
            print("\n")
            b.error("Cannot determine the size of all classes. Reason: recursive property inline type dependencies.")
        }
        total += found
    }

    stage_types(b)
}

fn class_determine_size(class: Class) !unable {

    let ct = class.type
    if ct == ct_pointer || ct == ct_int {
        class.size_known = true
        return 
    }

    let props = class.props
    let size : uint = 0
    each props as name, prop {
        let prop_size = prop.type.size()
        if prop_size == 0 : throw unable
        size += prop_size
    }

    let b = class.build
    if b.verbose > 2 : b.log("> Determine class size: " + class.display_name + " | size: " + size)

    class.size = size
    class.size_known = true
}

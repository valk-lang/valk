
fn stage_class_sizes(b: Build) {

    if b.verbose > 2 : b.log("> Stage 2.3: Determine class sizes")

    let class_count : uint = 0
    each b.units as unit {
        class_count += unit.classes.length
    }

    let total : uint = 0
    while total < class_count {
        let found : uint = 0
        each b.units as unit {
            each unit.classes as class {
                if class.size_known : continue
                class.determine_size() ! {
                    continue
                }
                found++
            }
        }
        if found == 0 {
            print("Classes: ")
            each b.units as unit {
                each unit.classes as class {
                    if class.size_known : continue
                    print(class.display_name)
                    print(" ")
                }
            }
            print("\n")
            b.error("Cannot determine the size of all classes. Reason: recursive property inline type dependencies.")
        }
        total += found
    }

    b.class_sizes_known = true

    // each b.units as unit {
    //     each unit.classes as class {
    //         class.determine_prop_offsets()
    //     }
    // }

    stage_types(b)
}

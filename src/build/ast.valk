
fn read_ast(p: Parser, scope: Scope, single: bool) {

    let b = p.build
    let first = true

    while true {
        if single && !first : break

        p.backup()
        let t = p.tok(true, true)

        if t == tok_sign {
            if p.word_is("}") {
                break
            }
            if p.word_is(";") {
                continue
            }
            if p.word_is("#") && p.on_newline {
                parse_compile_macro(p)
                continue;
            }
        }

        // Not a token -> Read value instead
        p.restore()
        let left = read_value(p, scope)
    }
}


header "llvm" as llvm

use helper

fn stage_object(u: Unit) {

    let b = u.build
    if b.verbose > 2 : b.log("> Stage 3.4: Generating object file: " + u.path_o)

    // Get full ir
    let ir = u.ir()
    let code = ir.final_code()
    let hash = helper:ctxhash(code)
    println(code)

    // Check if hash changed
    let prev_hash = ""
    let json = u.json()
    if isset(json) {
        let h = json.get("hash") ? null
        if isset(h) {
            prev_hash = h.string() ? ""
        }
    }

    println(hash + " vs " + prev_hash)

    if hash != prev_hash {
        // Hash changed, update object file
        build_object(u, code)
    }
}

fn build_object(u: Unit, ir: String) {
}


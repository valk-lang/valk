
use valk:utils

struct IRFunc {
    ir: IR
    func: Func
    blocks: Array[IRBlock] (array[IRBlock]{})
    block_start: IRBlock
    block_code: IRBlock
    blockc: uint (0)

    static fn new(ir: IR, func: Func) IRFunc {
        return IRFunc {
            ir: ir
            func: func
            block_start: IRBlock.new("start")
            block_code: IRBlock.new("code")
        }
    }

    fn new_block(name: String) IRBlock {
        return IRBlock.new(name + "_" + this.blockc++)
    }

    fn build() {
        ir_func_build(this)
    }
}

struct IRBlock {
    name: String
    code: utils:ByteBuffer (utils:ByteBuffer.new(128))

    static fn new(name: String) IRBlock {
        return IRBlock {
            name: name
        }
    }
}

fn ir_func_build(func: IRFunc) {
}

name: ci

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
  pull_request:
    types: [ready_for_review, synchronize, opened]
    branches: [ main ]

jobs:
  linux-x64:
    name: "Test linux-x64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM 15
        run: sudo apt-get update && sudo apt-get install llvm-15 libzstd-dev

      - name: Install lld
        run: sudo apt-get install lld

      - name: Get compiler from cache
        id: cache-compiler-linux-x64
        uses: actions/cache@v4
        with:
          path: valk-0.0.2-linux-x64.tar.gz
          key: cache-compiler-linux-x64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-linux-x64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/0.0.2/valk-0.0.2-linux-x64.tar.gz

      - name: Install compiler
        run: |
          mkdir -p ~/valk-dev
          tar -xf valk-0.0.2-linux-x64.tar.gz -C ~/valk-dev
          ln -s -f ~/valk-dev/valk /usr/local/bin/valk

      - name: Build valk
        run: make ci-linux

      - name: Run test
        run: make test

      - name: LLD symlinks
        run: sudo ./valk linker-symlinks

      - name: Cross compile test
        run: make test-cross

  macos-x64:
    name: "Test macos-x64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: macos-13
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM 15
        run: brew install ncurses llvm@15 && brew link llvm@15

      - name: Get compiler from cache
        id: cache-compiler-macos-x64
        uses: actions/cache@v4
        with:
          path: valk-0.0.2-macos-x64.tar.gz
          key: cache-compiler-macos-x64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-macos-x64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/0.0.2/valk-0.0.2-macos-x64.tar.gz

      - name: Install compiler
        run: |
          mkdir -p ~/valk-dev
          tar -xf valk-0.0.2-macos-x64.tar.gz -C ~/valk-dev
          ln -s -f ~/valk-dev/valk /usr/local/bin/valk

      - name: Build valk
        run: make ci-macos

      - name: Run test
        run: make test

      - name: LLD symlinks
        run: sudo ./valk linker-symlinks

      - name: Cross compile test
        run: make test-cross

  macos-arm64:
    name: "Test macos-arm64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: macos-latest
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM 15
        run: brew install ncurses llvm@15 && brew link llvm@15

      - name: Get compiler from cache
        id: cache-compiler-macos-arm64
        uses: actions/cache@v4
        with:
          path: valk-0.0.2-macos-arm64.tar.gz
          key: cache-compiler-macos-arm64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-macos-arm64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/0.0.2/valk-0.0.2-macos-arm64.tar.gz

      - name: Install compiler
        run: |
          mkdir -p ~/valk-dev
          tar -xf valk-0.0.2-macos-arm64.tar.gz -C ~/valk-dev
          ln -s -f ~/valk-dev/valk /usr/local/bin/valk

      - name: Build valk
        run: make ci-macos

      - name: Run test
        run: make test

      - name: LLD symlinks
        run: sudo ./valk linker-symlinks

      - name: Cross compile test
        run: make test-cross


  win-x64:
    name: "Test win-x64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: windows-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "15.0"
          directory: ./llvm

      - name: Get compiler from cache
        id: cache-compiler-win-x64
        uses: actions/cache@v4
        with:
          path: valk-0.0.2-win-x64.tar.gz
          key: cache-compiler-win-x64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-win-x64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/0.0.2/valk-0.0.2-win-x64.zip

      - name: Install compiler
        run: |
          mkdir -Force ~/valk-dev
          unzip valk-0.0.2-win-x64.zip -d ~/valk-dev
          ln -s -f ~/valk-dev/lld-link.exe /usr/bin/lld-link.exe
          cp ~/valk-dev/lld-link.exe .

      - name: Build valk
        run: make ci-win

      - name: Run test
        run: |
          ./valk.exe build (get-item ./tests/*.valk).FullName . --test -o ./test-all.exe -vv --def "DEF_TEST=TestValue"
          curl -O https://curl.se/ca/cacert.pem
          ./test-all.exe

      - name: LLD symlinks
        run: ./valk.exe linker-symlinks

      - name: Cross compile test
        run: |
          ./valk.exe build (get-item ./tests/*.valk).FullName . --test -o ./test-cross.exe -vv --def "DEF_TEST=TestValue" --target linux-x64
          ./valk.exe build (get-item ./tests/*.valk).FullName . --test -o ./test-cross.exe -vv --def "DEF_TEST=TestValue" --target macos-x64
          ./valk.exe build (get-item ./tests/*.valk).FullName . --test -o ./test-cross.exe -vv --def "DEF_TEST=TestValue" --target macos-arm64
          ./valk.exe build (get-item ./tests/*.valk).FullName . --test -o ./test-cross.exe -vv --def "DEF_TEST=TestValue" --target win-x64


name: ci

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
  pull_request:
    types: [ready_for_review, synchronize, opened]
    branches: [ main ]

jobs:
  linux-x64:
    name: "Test linux-x64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM 15
        run: sudo apt-get update && sudo apt-get install llvm-15 libzstd-dev

      - name: Install lld
        run: sudo apt-get install lld

      - name: Get compiler from cache
        id: cache-compiler-linux-x64
        uses: actions/cache@v4
        with:
          path: valk-legacy-linux-x64.tar.gz
          key: cache-compiler-linux-x64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-linux-x64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/legacy/valk-legacy-linux-x64.tar.gz

      - name: Install compiler
        run: |
          mkdir -p ~/valk-legacy
          tar -xf valk-legacy-linux-x64.tar.gz -C ~/valk-legacy
          ln -s -f ~/valk-legacy/valk /usr/local/bin/valk-legacy

      - name: Build valk
        run: make ci-linux

      - name: Run test
        run: make test

      - name: LLD symlinks
        run: sudo ./valk linker-symlinks

      - name: Cross compile test
        run: make test-cross

  macos-x64:
    name: "Test macos-x64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: macos-13
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM 15
        run: brew install llvm@15 && brew link llvm@15

      - name: Get compiler from cache
        id: cache-compiler-macos-x64
        uses: actions/cache@v4
        with:
          path: valk-legacy-macos-x64.tar.gz
          key: cache-compiler-macos-x64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-macos-x64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/legacy/valk-legacy-macos-x64.tar.gz

      - name: Install compiler
        run: |
          mkdir -p ~/valk-legacy
          tar -xf valk-legacy-macos-x64.tar.gz -C ~/valk-legacy
          ln -s -f ~/valk-legacy/valk /usr/local/bin/valk-legacy

      - name: Build valk
        run: make ci-macos

      - name: Run test
        run: make test

      - name: LLD symlinks
        run: sudo ./valk linker-symlinks

      - name: Cross compile test
        run: make test-cross

  macos-arm64:
    name: "Test macos-arm64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: macos-latest
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM 15
        run: brew install llvm@15 && brew link llvm@15

      - name: Get compiler from cache
        id: cache-compiler-macos-arm64
        uses: actions/cache@v4
        with:
          path: valk-legacy-macos-arm64.tar.gz
          key: cache-compiler-macos-arm64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-macos-arm64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/legacy/valk-legacy-macos-arm64.tar.gz

      - name: Install compiler
        run: |
          mkdir -p ~/valk-legacy
          tar -xf valk-legacy-macos-arm64.tar.gz -C ~/valk-legacy
          ln -s -f ~/valk-legacy/valk /usr/local/bin/valk-legacy

      - name: Build valk
        run: make ci-macos

      - name: Run test
        run: make test

      - name: LLD symlinks
        run: sudo ./valk linker-symlinks

      - name: Cross compile test
        run: make test-cross


  win-x64:
    name: "Test win-x64"
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
    runs-on: windows-latest
    timeout-minutes: 3
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: false
          install: >-
            curl
            mingw-w64-x86_64-lld
            unzip

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "15.0"
          directory: ~/llvm

      - name: Get compiler from cache
        id: cache-compiler-win-x64
        uses: actions/cache@v4
        with:
          path: valk-legacy-win-x64.tar.gz
          key: cache-compiler-win-x64-${{ hashFiles('.github/ci-cache.txt') }}

      - name: Download compiler
        if: steps.cache-compiler-win-x64.outputs.cache-hit != 'true'
        run: curl -O https://cdn.valk-lang.dev/releases/valk/legacy/valk-legacy-win-x64.zip

      - name: Install compiler
        run: |
          ls -l ~/llvm
          ls -l ~/llvm/lib
          mkdir -Force ~/valk-legacy
          unzip valk-legacy-win-x64.zip -d ~/valk-legacy
          ln -s -f ~/valk-legacy/lld-link.exe /usr/bin/lld-link.exe

      - name: Build valk
        run: make ci-win

      - name: Run test
        run: make test

      - name: LLD symlinks
        run: ./valk linker-symlinks

      - name: Cross compile test
        run: make test-cross

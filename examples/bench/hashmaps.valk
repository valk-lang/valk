
use valk:time

fn main() {
    bench(1, 1000000)
    bench(10, 100000)
    bench(50, 10000)
    bench(1000, 100)
    bench(10000, 5)
}

fn bench(item_count: uint, repeat: uint) {
    let hm = hashmap[String, String]{}
    let km = flatmap[String, String]{}
    let keys = array[String]{}
    let i : uint = 0
    while i++ < item_count {
        let str : String = i
        hm.set(str, str)
        km.set(str, str)
        keys.push(str)
    }

    let s1 = time:microtime()
    i = 0
    while i++ < repeat {
        each keys as k {
            hm.get(k) ! panic("Item not found")
        }
    }
    let t1 = time:microtime() - s1
    let s2 = time:microtime()
    i = 0
    while i++ < repeat {
        each keys as k {
            km.get(k) ! panic("Item not found")
        }
    }
    let t2 = time:microtime() - s2

    println("# Bench maps with %item_count items (Repeats: %repeat)")
    println("> Hash maps : " + t1 / 1000 + "ms")
    println("> Key maps  : " + t2 / 1000 + "ms")
}